#!/usr/bin/env node

// process command line arguments and options

var minimist = require('minimist');

var argv = minimist(process.argv.slice(2), {
  alias: {
    h: 'help',
    v: 'version',
    f: 'fakeroot',
    r: 'formats',
    q: 'silent',
    p: 'port'
  },
  string: ['port', 'formats', 'fakeroot'],
  boolean: ['help', 'silent', 'version']
});

// execute program

var path = require('path');

var server = require('../lib/server'),
  constants = require('../lib/constants'),
  cli = require('../lib/cli'),
  utils = require('../lib/utils');

if (argv.version) {
  cli.printVersion();
} else if (argv.help) {
  cli.printHelp();
} else {
  // check if schema directory is correct (cwd by default)
  var schemaDir = path.resolve(argv._[0] || '.');
  if (!utils.is_dir(schemaDir)) {
    cli.printError('Invalid schema directory');
    process.exit(1);
  }

  server.start({
    directory: schemaDir,
    silent: argv.silent,
    port: argv.port || process.env.PORT || constants.port,
    fakeroot: argv.fakeroot || constants.fakeroot,
    formats: argv.formats && path.resolve(argv.formats)
  }, function (err) {
    if (err) {
      cli.printError(err);
      process.exit(1);
    }
  });
}

function gracefulExit() {
  process.exit(0);
}

process.on('SIGINT', function () {
  console.log('Caught SIGINT');
  server.closeApp(gracefulExit);
});

process.on('SIGTERM', function () {
  console.log('Caught SIGTERM');
  server.closeApp(gracefulExit);
});
